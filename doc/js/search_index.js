var search_data = {"index":{"searchIndex":["add_student_presenter","app_logger","base_presenter","binary_tree","node","binary_tree_iterator","contact_sort_decorator","db_client","data_list","data_list_student_short","data_storage_strategy","data_table","deep_dup","edit_contacts_presenter","edit_git_presenter","edit_student_presenter","field_filter_decorator","filter","filter_decorator","full_name_filter_decorator","full_name_sort_decorator","git_sort_decorator","has_not_field_filter_decorator","json_storage_strategy","person","replace_student_presenter","sort_decorator","student","studentmvp","error","student_list_presenter","student_short","students_list","students_list_db","students_list_file","students_list_file_adapter","students_list_interface","yaml_storage_strategy","<=>()","add()","add_observer()","add_student()","add_student()","add_student()","add_student()","add_student()","add_student()","apply()","apply()","apply()","apply()","apply()","apply()","apply()","apply()","apply()","apply_filters()","build_row()","check_and_update_page()","clear_selected()","close()","col_count()","data=()","debug()","deep_dup()","delete_student()","delete_student()","delete_student()","delete_student()","delete_student()","delete_student()","deselect()","deselect()","each()","each()","error()","fatal()","find()","get()","get_any_contact()","get_any_contact()","get_any_contact()","get_data()","get_full_name()","get_info()","get_k_n_student_short_list()","get_k_n_student_short_list()","get_k_n_student_short_list()","get_k_n_student_short_list()","get_k_n_student_short_list()","get_names()","get_names()","get_selected()","get_selected()","get_student()","get_student()","get_student_by_id()","get_student_by_id()","get_student_by_id()","get_student_by_id()","get_student_by_id()","get_student_short_count()","get_student_short_count()","get_student_short_count()","get_student_short_count()","get_student_short_count()","git=()","info()","instance()","instance()","key()","log()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_from_hash()","new_from_string()","new_from_string()","new_from_student_obj()","new_student()","notify()","operation()","operation()","parse_string()","populate_fields()","populate_fields()","populate_fields()","populate_fields()","populate_fields()","query()","read()","read()","read()","read()","refresh_data()","replace_student()","replace_student()","replace_student()","replace_student()","replace_student()","replace_student()","reset_filters()","retrieve_data()","row_count()","select()","select()","set_contacts()","set_sort_order()","sort_by_full_name!()","switch_page()","to_h()","to_line_s()","to_s()","valid_birthdate?()","valid_data?()","valid_data?()","valid_data?()","valid_data?()","valid_data?()","valid_email?()","valid_git?()","valid_index?()","valid_name?()","valid_name?()","valid_phone_number?()","valid_telegram?()","validate?()","validate?()","validate?()","validate_contacts?()","validate_contacts?()","validate_git?()","warn()","write()","write()","write()","write()","gemfile","readme","rakefile","setup"],"longSearchIndex":["add_student_presenter","app_logger","base_presenter","binary_tree","binary_tree::node","binary_tree_iterator","contact_sort_decorator","db_client","data_list","data_list_student_short","data_storage_strategy","data_table","deep_dup","edit_contacts_presenter","edit_git_presenter","edit_student_presenter","field_filter_decorator","filter","filter_decorator","full_name_filter_decorator","full_name_sort_decorator","git_sort_decorator","has_not_field_filter_decorator","json_storage_strategy","person","replace_student_presenter","sort_decorator","student","studentmvp","studentmvp::error","student_list_presenter","student_short","students_list","students_list_db","students_list_file","students_list_file_adapter","students_list_interface","yaml_storage_strategy","student#<=>()","binary_tree#add()","data_list#add_observer()","student_list_presenter#add_student()","students_list#add_student()","students_list_db#add_student()","students_list_file#add_student()","students_list_file_adapter#add_student()","students_list_interface#add_student()","contact_sort_decorator#apply()","field_filter_decorator#apply()","filter#apply()","filter_decorator#apply()","full_name_filter_decorator#apply()","full_name_sort_decorator#apply()","git_sort_decorator#apply()","has_not_field_filter_decorator#apply()","sort_decorator#apply()","student_list_presenter#apply_filters()","data_list#build_row()","student_list_presenter#check_and_update_page()","data_list#clear_selected()","db_client#close()","data_table#col_count()","data_list#data=()","app_logger#debug()","deep_dup#deep_dup()","student_list_presenter#delete_student()","students_list#delete_student()","students_list_db#delete_student()","students_list_file#delete_student()","students_list_file_adapter#delete_student()","students_list_interface#delete_student()","data_list#deselect()","student_list_presenter#deselect()","binary_tree#each()","binary_tree_iterator#each()","app_logger#error()","app_logger#fatal()","binary_tree#find()","data_table#get()","person#get_any_contact()","student#get_any_contact()","student_short#get_any_contact()","data_list#get_data()","student#get_full_name()","student#get_info()","students_list#get_k_n_student_short_list()","students_list_db#get_k_n_student_short_list()","students_list_file#get_k_n_student_short_list()","students_list_file_adapter#get_k_n_student_short_list()","students_list_interface#get_k_n_student_short_list()","data_list#get_names()","data_list_student_short#get_names()","data_list#get_selected()","student_list_presenter#get_selected()","edit_student_presenter#get_student()","student_list_presenter#get_student()","students_list#get_student_by_id()","students_list_db#get_student_by_id()","students_list_file#get_student_by_id()","students_list_file_adapter#get_student_by_id()","students_list_interface#get_student_by_id()","students_list#get_student_short_count()","students_list_db#get_student_short_count()","students_list_file#get_student_short_count()","students_list_file_adapter#get_student_short_count()","students_list_interface#get_student_short_count()","person#git=()","app_logger#info()","app_logger::instance()","db_client::instance()","student#key()","app_logger#log()","app_logger::new()","base_presenter::new()","binary_tree::new()","binary_tree::node::new()","binary_tree_iterator::new()","contact_sort_decorator::new()","db_client::new()","data_list::new()","data_table::new()","edit_student_presenter::new()","field_filter_decorator::new()","filter_decorator::new()","full_name_filter_decorator::new()","full_name_sort_decorator::new()","git_sort_decorator::new()","has_not_field_filter_decorator::new()","sort_decorator::new()","student::new()","student_list_presenter::new()","student_short::new()","students_list::new()","students_list_file::new()","students_list_file_adapter::new()","student::new_from_hash()","student::new_from_string()","student_short::new_from_string()","student_short::new_from_student_obj()","edit_student_presenter#new_student()","data_list#notify()","add_student_presenter#operation()","edit_student_presenter#operation()","person::parse_string()","add_student_presenter#populate_fields()","edit_contacts_presenter#populate_fields()","edit_git_presenter#populate_fields()","edit_student_presenter#populate_fields()","replace_student_presenter#populate_fields()","db_client#query()","data_storage_strategy#read()","json_storage_strategy#read()","students_list_file#read()","yaml_storage_strategy#read()","student_list_presenter#refresh_data()","student_list_presenter#replace_student()","students_list#replace_student()","students_list_db#replace_student()","students_list_file#replace_student()","students_list_file_adapter#replace_student()","students_list_interface#replace_student()","student_list_presenter#reset_filters()","data_list#retrieve_data()","data_table#row_count()","data_list#select()","student_list_presenter#select()","person#set_contacts()","student_list_presenter#set_sort_order()","students_list_file#sort_by_full_name!()","student_list_presenter#switch_page()","student#to_h()","student#to_line_s()","student#to_s()","student::valid_birthdate?()","add_student_presenter#valid_data?()","edit_contacts_presenter#valid_data?()","edit_git_presenter#valid_data?()","edit_student_presenter#valid_data?()","replace_student_presenter#valid_data?()","person::valid_email?()","person::valid_git?()","data_list#valid_index?()","person::valid_name?()","student_short::valid_name?()","person::valid_phone_number?()","person::valid_telegram?()","person#validate?()","student#validate?()","student_short#validate?()","student#validate_contacts?()","student_short#validate_contacts?()","person#validate_git?()","app_logger#warn()","data_storage_strategy#write()","json_storage_strategy#write()","students_list_file#write()","yaml_storage_strategy#write()","","","",""],"info":[["Add_student_presenter","","Add_student_presenter.html","","<p>Add_student_presenter\n<p>Презентер для добавления нового студента.\n"],["App_logger","","App_logger.html","",""],["Base_presenter","","Base_presenter.html","","<p>Base_presenter\n<p>Базовый класс для презентеров. Управляет основными атрибутами и логикой взаимодействия …\n"],["Binary_tree","","Binary_tree.html","",""],["Binary_tree::Node","","Binary_tree/Node.html","",""],["Binary_tree_iterator","","Binary_tree_iterator.html","",""],["Contact_sort_decorator","","Contact_sort_decorator.html","",""],["DB_client","","DB_client.html","",""],["Data_list","","Data_list.html","",""],["Data_list_student_short","","Data_list_student_short.html","",""],["Data_storage_strategy","","Data_storage_strategy.html","",""],["Data_table","","Data_table.html","",""],["Deep_dup","","Deep_dup.html","",""],["Edit_contacts_presenter","","Edit_contacts_presenter.html","","<p>Edit_contacts_presenter\n<p>Презентер для редактирования контактной информации студента.\n"],["Edit_git_presenter","","Edit_git_presenter.html","","<p>Edit_git_presenter\n<p>Презентер для редактирования информации о GitHub аккаунте студента.\n"],["Edit_student_presenter","","Edit_student_presenter.html","","<p>Edit_student_presenter\n<p>Базовый класс для управления данными студентов. Предоставляет общие методы для …\n"],["Field_filter_decorator","","Field_filter_decorator.html","",""],["Filter","","Filter.html","",""],["Filter_decorator","","Filter_decorator.html","",""],["Full_name_filter_decorator","","Full_name_filter_decorator.html","",""],["Full_name_sort_decorator","","Full_name_sort_decorator.html","",""],["Git_sort_decorator","","Git_sort_decorator.html","",""],["Has_not_field_filter_decorator","","Has_not_field_filter_decorator.html","",""],["JSON_storage_strategy","","JSON_storage_strategy.html","",""],["Person","","Person.html","",""],["Replace_student_presenter","","Replace_student_presenter.html","","<p>Replace_student_presenter\n<p>Презентер для замены информации о студенте.\n"],["Sort_decorator","","Sort_decorator.html","",""],["Student","","Student.html","",""],["StudentMvp","","StudentMvp.html","",""],["StudentMvp::Error","","StudentMvp/Error.html","",""],["Student_list_presenter","","Student_list_presenter.html","","<p>Student_list_presenter\n<p>Презентер для управления списком студентов. Отвечает за логику отображения, фильтрации …\n"],["Student_short","","Student_short.html","",""],["Students_list","","Students_list.html","",""],["Students_list_DB","","Students_list_DB.html","",""],["Students_list_file","","Students_list_file.html","",""],["Students_list_file_adapter","","Students_list_file_adapter.html","",""],["Students_list_interface","","Students_list_interface.html","",""],["YAML_storage_strategy","","YAML_storage_strategy.html","",""],["<=>","Student","Student.html#method-i-3C-3D-3E","(other)",""],["add","Binary_tree","Binary_tree.html#method-i-add","(value)",""],["add_observer","Data_list","Data_list.html#method-i-add_observer","(observer)",""],["add_student","Student_list_presenter","Student_list_presenter.html#method-i-add_student","(student)","<p>Добавление нового студента.\n<p>@param student [Student] Объект студента для добавления.\n"],["add_student","Students_list","Students_list.html#method-i-add_student","(student)",""],["add_student","Students_list_DB","Students_list_DB.html#method-i-add_student","(student)",""],["add_student","Students_list_file","Students_list_file.html#method-i-add_student","(student)","<p>add student\n"],["add_student","Students_list_file_adapter","Students_list_file_adapter.html#method-i-add_student","(student)","<p>add student\n"],["add_student","Students_list_interface","Students_list_interface.html#method-i-add_student","(student)",""],["apply","Contact_sort_decorator","Contact_sort_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Field_filter_decorator","Field_filter_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Filter","Filter.html#method-i-apply","(filtering_obj)",""],["apply","Filter_decorator","Filter_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Full_name_filter_decorator","Full_name_filter_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Full_name_sort_decorator","Full_name_sort_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Git_sort_decorator","Git_sort_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Has_not_field_filter_decorator","Has_not_field_filter_decorator.html#method-i-apply","(filtering_obj)",""],["apply","Sort_decorator","Sort_decorator.html#method-i-apply","(filtering_obj)",""],["apply_filters","Student_list_presenter","Student_list_presenter.html#method-i-apply_filters","()","<p>Применение фильтров.\n"],["build_row","Data_list","Data_list.html#method-i-build_row","(index, obj)","<p>build row method (abstract)\n"],["check_and_update_page","Student_list_presenter","Student_list_presenter.html#method-i-check_and_update_page","()","<p>Проверка и, если нужно, смена страницы в таблице. Используется после удаления студента.\n"],["clear_selected","Data_list","Data_list.html#method-i-clear_selected","()","<p>clear selected\n"],["close","DB_client","DB_client.html#method-i-close","()",""],["col_count","Data_table","Data_table.html#method-i-col_count","()","<p>column count\n"],["data=","Data_list","Data_list.html#method-i-data-3D","(data)","<p>data setter\n"],["debug","App_logger","App_logger.html#method-i-debug","(message)",""],["deep_dup","Deep_dup","Deep_dup.html#method-i-deep_dup","(element)","<p>deep copy\n"],["delete_student","Student_list_presenter","Student_list_presenter.html#method-i-delete_student","()","<p>Удаление выбранных студентов в таблице студентов.\n"],["delete_student","Students_list","Students_list.html#method-i-delete_student","(id)",""],["delete_student","Students_list_DB","Students_list_DB.html#method-i-delete_student","(id)",""],["delete_student","Students_list_file","Students_list_file.html#method-i-delete_student","(id)","<p>delete student by id\n"],["delete_student","Students_list_file_adapter","Students_list_file_adapter.html#method-i-delete_student","(id)","<p>delete student by id\n"],["delete_student","Students_list_interface","Students_list_interface.html#method-i-delete_student","(id)",""],["deselect","Data_list","Data_list.html#method-i-deselect","(number)","<p>deselect\n"],["deselect","Student_list_presenter","Student_list_presenter.html#method-i-deselect","(number)","<p>Удаление выделения строки таблицы.\n<p>@param number [Integer] Индекс строки для удаления выбора.\n"],["each","Binary_tree","Binary_tree.html#method-i-each","(&block)",""],["each","Binary_tree_iterator","Binary_tree_iterator.html#method-i-each","(&block)",""],["error","App_logger","App_logger.html#method-i-error","(message)",""],["fatal","App_logger","App_logger.html#method-i-fatal","(message)",""],["find","Binary_tree","Binary_tree.html#method-i-find","(key)",""],["get","Data_table","Data_table.html#method-i-get","(row, col)","<p>get element\n"],["get_any_contact","Person","Person.html#method-i-get_any_contact","()",""],["get_any_contact","Student","Student.html#method-i-get_any_contact","()","<p>get any contact in string\n"],["get_any_contact","Student_short","Student_short.html#method-i-get_any_contact","()",""],["get_data","Data_list","Data_list.html#method-i-get_data","()","<p>get_data\n"],["get_full_name","Student","Student.html#method-i-get_full_name","()","<p>get full name in string\n"],["get_info","Student","Student.html#method-i-get_info","()","<p>get short info in string\n"],["get_k_n_student_short_list","Students_list","Students_list.html#method-i-get_k_n_student_short_list","(k, n, filter = nil, data_list = nil)",""],["get_k_n_student_short_list","Students_list_DB","Students_list_DB.html#method-i-get_k_n_student_short_list","(k, n, filter = nil, data_list = nil)",""],["get_k_n_student_short_list","Students_list_file","Students_list_file.html#method-i-get_k_n_student_short_list","(k, n, filter = nil, data_list = nil)","<p>get data_list_student_short of k n students\n"],["get_k_n_student_short_list","Students_list_file_adapter","Students_list_file_adapter.html#method-i-get_k_n_student_short_list","(k, n, filter = nil, data_list = nil)","<p>get data_list_student_short of k n students\n"],["get_k_n_student_short_list","Students_list_interface","Students_list_interface.html#method-i-get_k_n_student_short_list","(k, n, filter = nil, data_list = nil)",""],["get_names","Data_list","Data_list.html#method-i-get_names","()","<p>get names (abstract)\n"],["get_names","Data_list_student_short","Data_list_student_short.html#method-i-get_names","()","<p>get_names for student short\n"],["get_selected","Data_list","Data_list.html#method-i-get_selected","()","<p>get selected ids\n"],["get_selected","Student_list_presenter","Student_list_presenter.html#method-i-get_selected","()","<p>Получение списка ID выбранных студентов.\n<p>@return [Array&lt;Integer&gt;] Список ID выбранных студентов. …\n"],["get_student","Edit_student_presenter","Edit_student_presenter.html#method-i-get_student","()","<p>Получение данных студента из родительского презентера. Загружает информацию о выбранном студенте.\n"],["get_student","Student_list_presenter","Student_list_presenter.html#method-i-get_student","(id)","<p>Получение объекта студента по ID.\n<p>@return [Student] Объект студента.\n"],["get_student_by_id","Students_list","Students_list.html#method-i-get_student_by_id","(id)",""],["get_student_by_id","Students_list_DB","Students_list_DB.html#method-i-get_student_by_id","(id)",""],["get_student_by_id","Students_list_file","Students_list_file.html#method-i-get_student_by_id","(id)","<p>get student by id\n"],["get_student_by_id","Students_list_file_adapter","Students_list_file_adapter.html#method-i-get_student_by_id","(id)","<p>get student by id\n"],["get_student_by_id","Students_list_interface","Students_list_interface.html#method-i-get_student_by_id","(id)",""],["get_student_short_count","Students_list","Students_list.html#method-i-get_student_short_count","(filter = nil)",""],["get_student_short_count","Students_list_DB","Students_list_DB.html#method-i-get_student_short_count","(filter = nil)",""],["get_student_short_count","Students_list_file","Students_list_file.html#method-i-get_student_short_count","(filter = nil)","<p>get count of students\n"],["get_student_short_count","Students_list_file_adapter","Students_list_file_adapter.html#method-i-get_student_short_count","(filter = nil)","<p>get count of students\n"],["get_student_short_count","Students_list_interface","Students_list_interface.html#method-i-get_student_short_count","(filter = nil)",""],["git=","Person","Person.html#method-i-git-3D","(git)","<p>git setter\n"],["info","App_logger","App_logger.html#method-i-info","(message)",""],["instance","App_logger","App_logger.html#method-c-instance","()",""],["instance","DB_client","DB_client.html#method-c-instance","(db_config = nil)",""],["key","Student","Student.html#method-i-key","()","<p>key for binary tree\n"],["log","App_logger","App_logger.html#method-i-log","(severity, message)",""],["new","App_logger","App_logger.html#method-c-new","()",""],["new","Base_presenter","Base_presenter.html#method-c-new","(view)","<p>Инициализация базового презентера.\n<p>@param view [Base_view_interface] Объект представления, с которым работает …\n"],["new","Binary_tree","Binary_tree.html#method-c-new","()",""],["new","Binary_tree::Node","Binary_tree/Node.html#method-c-new","(value, color = RED)",""],["new","Binary_tree_iterator","Binary_tree_iterator.html#method-c-new","(root)",""],["new","Contact_sort_decorator","Contact_sort_decorator.html#method-c-new","(filter, order)",""],["new","DB_client","DB_client.html#method-c-new","(db_config)",""],["new","Data_list","Data_list.html#method-c-new","(elements)","<p>constructor\n"],["new","Data_table","Data_table.html#method-c-new","(data)","<p>constructor\n"],["new","Edit_student_presenter","Edit_student_presenter.html#method-c-new","(view, parent_presenter)","<p>Инициализация презентера для управления данными студентов.\n<p>@param view [Modal_interface] Представление …\n"],["new","Field_filter_decorator","Field_filter_decorator.html#method-c-new","(filter, field, value)",""],["new","Filter_decorator","Filter_decorator.html#method-c-new","(filter)",""],["new","Full_name_filter_decorator","Full_name_filter_decorator.html#method-c-new","(filter, full_name)",""],["new","Full_name_sort_decorator","Full_name_sort_decorator.html#method-c-new","(filter, order)",""],["new","Git_sort_decorator","Git_sort_decorator.html#method-c-new","(filter, order)",""],["new","Has_not_field_filter_decorator","Has_not_field_filter_decorator.html#method-c-new","(filter, field)",""],["new","Sort_decorator","Sort_decorator.html#method-c-new","(filter, order)",""],["new","Student","Student.html#method-c-new","(first_name:, name:, patronymic:, birthdate:, id: nil, telegram: nil, phone_number: nil, email: nil, git: nil, key_type: :birthdate)","<p>constructor\n"],["new","Student_list_presenter","Student_list_presenter.html#method-c-new","(view)","<p>Инициализация презентера списка студентов. Настраивает список студентов, фильтры и порядок сортировки. …\n"],["new","Student_short","Student_short.html#method-c-new","(full_name:, git:, contact:, id: nil)",""],["new","Students_list","Students_list.html#method-c-new","(adapter)",""],["new","Students_list_file","Students_list_file.html#method-c-new","(file_path, data_storage_strategy)","<p>constructor\n"],["new","Students_list_file_adapter","Students_list_file_adapter.html#method-c-new","(adaptee)","<p>constructor\n"],["new_from_hash","Student","Student.html#method-c-new_from_hash","(hash)","<p>constructor_from_hash\n"],["new_from_string","Student","Student.html#method-c-new_from_string","(string)","<p>constructor_from_string\n"],["new_from_string","Student_short","Student_short.html#method-c-new_from_string","(id, string)","<p>constructor from string\n"],["new_from_student_obj","Student_short","Student_short.html#method-c-new_from_student_obj","(student)","<p>constructor from Student object\n"],["new_student","Edit_student_presenter","Edit_student_presenter.html#method-i-new_student","(student_data)","<p>Создание нового объекта студента из предоставленных данных.\n<p>@param student_data [Hash] Данные студента. …\n"],["notify","Data_list","Data_list.html#method-i-notify","()",""],["operation","Add_student_presenter","Add_student_presenter.html#method-i-operation","(student_data)","<p>Операция добавления нового студента.\n<p>@param student_data [Hash] Данные студента.\n"],["operation","Edit_student_presenter","Edit_student_presenter.html#method-i-operation","(student_data)","<p>Основная операция редактирования студента.\n<p>@param student_data [Hash] Данные студента.\n"],["parse_string","Person","Person.html#method-c-parse_string","(string)","<p>returning hash\n"],["populate_fields","Add_student_presenter","Add_student_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса пустыми данными для нового студента.\n"],["populate_fields","Edit_contacts_presenter","Edit_contacts_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса текущими контактами студента.\n"],["populate_fields","Edit_git_presenter","Edit_git_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса текущими данными о Git студента.\n"],["populate_fields","Edit_student_presenter","Edit_student_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса данными студента.\n<p>@raise [NotImplementedError] Метод должен быть реализован …\n"],["populate_fields","Replace_student_presenter","Replace_student_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса текущими основными данными студента.\n"],["query","DB_client","DB_client.html#method-i-query","(query, params=[])",""],["read","Data_storage_strategy","Data_storage_strategy.html#method-i-read","(file_path)","<p>read from file\n"],["read","JSON_storage_strategy","JSON_storage_strategy.html#method-i-read","(file_path)","<p>read from json file\n"],["read","Students_list_file","Students_list_file.html#method-i-read","()","<p>read from data storage\n"],["read","YAML_storage_strategy","YAML_storage_strategy.html#method-i-read","(file_path)","<p>read from yaml file\n"],["refresh_data","Student_list_presenter","Student_list_presenter.html#method-i-refresh_data","()","<p>Обновление данных в таблице студентов. Выполняет сброс фильтров, применяет новые фильтры и обновляет …\n"],["replace_student","Student_list_presenter","Student_list_presenter.html#method-i-replace_student","(student)","<p>Изменение студента.\n<p>@param student [Student] Объект студента для изменения.\n"],["replace_student","Students_list","Students_list.html#method-i-replace_student","(id, new_student)",""],["replace_student","Students_list_DB","Students_list_DB.html#method-i-replace_student","(id, new_student)",""],["replace_student","Students_list_file","Students_list_file.html#method-i-replace_student","(id, new_student)","<p>replace student by id\n"],["replace_student","Students_list_file_adapter","Students_list_file_adapter.html#method-i-replace_student","(id, new_student)","<p>replace student by id\n"],["replace_student","Students_list_interface","Students_list_interface.html#method-i-replace_student","(id, new_student)",""],["reset_filters","Student_list_presenter","Student_list_presenter.html#method-i-reset_filters","()","<p>Сброс фильтров\n"],["retrieve_data","Data_list","Data_list.html#method-i-retrieve_data","()","<p>pattern-method\n"],["row_count","Data_table","Data_table.html#method-i-row_count","()","<p>row count\n"],["select","Data_list","Data_list.html#method-i-select","(number)","<p>select element id by number\n"],["select","Student_list_presenter","Student_list_presenter.html#method-i-select","(number)","<p>Выбор строки таблицы.\n<p>@param number [Integer] Индекс строки для выбора.\n"],["set_contacts","Person","Person.html#method-i-set_contacts","()",""],["set_sort_order","Student_list_presenter","Student_list_presenter.html#method-i-set_sort_order","(column_index)","<p>Установка порядка сортировки и сортировка данных в таблице.\n<p>@param column_index [Integer] Индекс столбца, …\n"],["sort_by_full_name!","Students_list_file","Students_list_file.html#method-i-sort_by_full_name-21","()","<p>sort by full name\n"],["switch_page","Student_list_presenter","Student_list_presenter.html#method-i-switch_page","(direction)","<p>Изменение текущей страницы в таблице.\n<p>@param direction [Integer] Направление для изменения страницы.\n"],["to_h","Student","Student.html#method-i-to_h","()","<p>to hash\n"],["to_line_s","Student","Student.html#method-i-to_line_s","()","<p>to string\n"],["to_s","Student","Student.html#method-i-to_s","()","<p>to string\n"],["valid_birthdate?","Student","Student.html#method-c-valid_birthdate-3F","(birthdate)",""],["valid_data?","Add_student_presenter","Add_student_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности данных студента при добавлении.\n<p>@param student_data [Hash] Данные студента. @return …\n"],["valid_data?","Edit_contacts_presenter","Edit_contacts_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности контактных данных студента.\n<p>@param student_data [Hash] Контактные данные студента. …\n"],["valid_data?","Edit_git_presenter","Edit_git_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности данных о Git.\n<p>@param student_data [Hash] Данные о Git. @return [Boolean] Возвращает …\n"],["valid_data?","Edit_student_presenter","Edit_student_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности данных студента.\n<p>@param student_data [Hash] Данные студента. @return [Boolean] Возвращает …\n"],["valid_data?","Replace_student_presenter","Replace_student_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности новых данных студента.\n<p>@param student_data [Hash] Новые данные студента. @return [Boolean] …\n"],["valid_email?","Person","Person.html#method-c-valid_email-3F","(email)","<p>email validation\n"],["valid_git?","Person","Person.html#method-c-valid_git-3F","(git)","<p>git link validation\n"],["valid_index?","Data_list","Data_list.html#method-i-valid_index-3F","(index)","<p>validate index\n"],["valid_name?","Person","Person.html#method-c-valid_name-3F","(name)","<p>names validation\n"],["valid_name?","Student_short","Student_short.html#method-c-valid_name-3F","(name)","<p>full name validation\n"],["valid_phone_number?","Person","Person.html#method-c-valid_phone_number-3F","(phone_number)","<p>phone number validation\n"],["valid_telegram?","Person","Person.html#method-c-valid_telegram-3F","(telegram)","<p>telegram validation\n"],["validate?","Person","Person.html#method-i-validate-3F","()","<p>validate git\n"],["validate?","Student","Student.html#method-i-validate-3F","()","<p>validate git and contacts\n"],["validate?","Student_short","Student_short.html#method-i-validate-3F","()","<p>validate git and contacts\n"],["validate_contacts?","Student","Student.html#method-i-validate_contacts-3F","()","<p>checking for contacts availability\n"],["validate_contacts?","Student_short","Student_short.html#method-i-validate_contacts-3F","()","<p>checking for contacts availability\n"],["validate_git?","Person","Person.html#method-i-validate_git-3F","()","<p>checking for git availability\n"],["warn","App_logger","App_logger.html#method-i-warn","(message)",""],["write","Data_storage_strategy","Data_storage_strategy.html#method-i-write","(file_path, students)","<p>write to file\n"],["write","JSON_storage_strategy","JSON_storage_strategy.html#method-i-write","(file_path, students)","<p>read to json file\n"],["write","Students_list_file","Students_list_file.html#method-i-write","()","<p>write to data storage\n"],["write","YAML_storage_strategy","YAML_storage_strategy.html#method-i-write","(file_path, students)","<p>read to yaml file\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p># Specify your gem’s dependencies in …\n"],["README","","README_md.html","","<p>StudentMvp\n<p>TODO: Delete this and the text below, and describe your gem\n<p>Welcome to your new gem! In this …\n"],["Rakefile","","Rakefile.html","","<p># frozen_string_literal: true\n<p>require “bundler/gem_tasks” task default: %i[]\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$‘nt’ set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}