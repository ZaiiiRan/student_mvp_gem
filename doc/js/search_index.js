var search_data = {"index":{"searchIndex":["add_student_presenter","app_logger","base_presenter","db_client","edit_contacts_presenter","edit_git_presenter","edit_student_presenter","replace_student_presenter","student_list_presenter","add_student()","apply_filters()","check_and_update_page()","close()","debug()","delete_student()","deselect()","error()","fatal()","get_selected()","get_student()","get_student()","info()","instance()","instance()","log()","new()","new()","new()","new()","new()","new_student()","operation()","operation()","populate_fields()","populate_fields()","populate_fields()","populate_fields()","populate_fields()","query()","refresh_data()","replace_student()","reset_filters()","select()","set_sort_order()","switch_page()","valid_data?()","valid_data?()","valid_data?()","valid_data?()","valid_data?()","warn()"],"longSearchIndex":["add_student_presenter","app_logger","base_presenter","db_client","edit_contacts_presenter","edit_git_presenter","edit_student_presenter","replace_student_presenter","student_list_presenter","student_list_presenter#add_student()","student_list_presenter#apply_filters()","student_list_presenter#check_and_update_page()","db_client#close()","app_logger#debug()","student_list_presenter#delete_student()","student_list_presenter#deselect()","app_logger#error()","app_logger#fatal()","student_list_presenter#get_selected()","edit_student_presenter#get_student()","student_list_presenter#get_student()","app_logger#info()","app_logger::instance()","db_client::instance()","app_logger#log()","app_logger::new()","base_presenter::new()","db_client::new()","edit_student_presenter::new()","student_list_presenter::new()","edit_student_presenter#new_student()","add_student_presenter#operation()","edit_student_presenter#operation()","add_student_presenter#populate_fields()","edit_contacts_presenter#populate_fields()","edit_git_presenter#populate_fields()","edit_student_presenter#populate_fields()","replace_student_presenter#populate_fields()","db_client#query()","student_list_presenter#refresh_data()","student_list_presenter#replace_student()","student_list_presenter#reset_filters()","student_list_presenter#select()","student_list_presenter#set_sort_order()","student_list_presenter#switch_page()","add_student_presenter#valid_data?()","edit_contacts_presenter#valid_data?()","edit_git_presenter#valid_data?()","edit_student_presenter#valid_data?()","replace_student_presenter#valid_data?()","app_logger#warn()"],"info":[["Add_student_presenter","","Add_student_presenter.html","","<p>Add_student_presenter\n<p>Презентер для добавления нового студента.\n"],["App_logger","","App_logger.html","","<p>App_logger\n<p>Логгер приложения\n"],["Base_presenter","","Base_presenter.html","","<p>Base_presenter\n<p>Базовый класс для презентеров. Управляет основными атрибутами и логикой взаимодействия …\n"],["DB_client","","DB_client.html","","<p>DB_client\n<p>Клиент базы данных MySQL\n"],["Edit_contacts_presenter","","Edit_contacts_presenter.html","","<p>Edit_contacts_presenter\n<p>Презентер для редактирования контактной информации студента.\n"],["Edit_git_presenter","","Edit_git_presenter.html","","<p>Edit_git_presenter\n<p>Презентер для редактирования информации о GitHub аккаунте студента.\n"],["Edit_student_presenter","","Edit_student_presenter.html","","<p>Edit_student_presenter\n<p>Базовый класс для управления данными студентов. Предоставляет общие методы для …\n"],["Replace_student_presenter","","Replace_student_presenter.html","","<p>Replace_student_presenter\n<p>Презентер для замены информации о студенте.\n"],["Student_list_presenter","","Student_list_presenter.html","","<p>Student_list_presenter\n<p>Презентер для управления списком студентов. Отвечает за логику отображения, фильтрации …\n"],["add_student","Student_list_presenter","Student_list_presenter.html#method-i-add_student","(student)","<p>Добавление нового студента.\n<p>@param student [Student] Объект студента для добавления.\n"],["apply_filters","Student_list_presenter","Student_list_presenter.html#method-i-apply_filters","()","<p>Применение фильтров.\n"],["check_and_update_page","Student_list_presenter","Student_list_presenter.html#method-i-check_and_update_page","()","<p>Проверка и, если нужно, смена страницы в таблице. Используется после удаления студента.\n"],["close","DB_client","DB_client.html#method-i-close","()","<p>Закрытие объекта клиента базы данных.\n"],["debug","App_logger","App_logger.html#method-i-debug","(message)","<p>Запись сообщения для дебага в лог\n<p>@param [String] message - сообщение\n"],["delete_student","Student_list_presenter","Student_list_presenter.html#method-i-delete_student","()","<p>Удаление выбранных студентов в таблице студентов.\n"],["deselect","Student_list_presenter","Student_list_presenter.html#method-i-deselect","(number)","<p>Удаление выделения строки таблицы.\n<p>@param number [Integer] Индекс строки для удаления выбора.\n"],["error","App_logger","App_logger.html#method-i-error","(message)","<p>Запись сообщения ошибки в лог\n<p>@param [String] message - сообщение\n"],["fatal","App_logger","App_logger.html#method-i-fatal","(message)","<p>Запись сообщения фатальной ошибки в лог\n<p>@param [String] message - сообщение\n"],["get_selected","Student_list_presenter","Student_list_presenter.html#method-i-get_selected","()","<p>Получение списка ID выбранных студентов.\n<p>@return [Array&lt;Integer&gt;] Список ID выбранных студентов. …\n"],["get_student","Edit_student_presenter","Edit_student_presenter.html#method-i-get_student","()","<p>Получение данных студента из родительского презентера. Загружает информацию о выбранном студенте.\n"],["get_student","Student_list_presenter","Student_list_presenter.html#method-i-get_student","(id)","<p>Получение объекта студента по ID.\n<p>@return [Student] Объект студента.\n"],["info","App_logger","App_logger.html#method-i-info","(message)","<p>Запись информационного сообщения в лог\n<p>@param [String] message - сообщение\n"],["instance","App_logger","App_logger.html#method-c-instance","(file_path = nil)","<p>Получение или создание объекта логгера Путь задать достаточно всего один раз. Если он не задан перед …\n"],["instance","DB_client","DB_client.html#method-c-instance","(db_config = nil)","<p>Получение или создание объекта клиента базы данных. Конфигурацию БД достаточно задать 1 раз.\n<p>@param [Hash] …\n"],["log","App_logger","App_logger.html#method-i-log","(severity, message)","<p>Запись сообщения в лог\n<p>@param [Symbol] severity - тип сообщения @param [String] message - сообщение\n"],["new","App_logger","App_logger.html#method-c-new","(file_path)","<p>Инициализация объекта логгера.\n<p>@param [String] file_path - путь к файлу логов. @raise [Error] Не указан …\n"],["new","Base_presenter","Base_presenter.html#method-c-new","(view)","<p>Инициализация базового презентера.\n<p>@param view [Base_view_interface] Объект представления, с которым работает …\n"],["new","DB_client","DB_client.html#method-c-new","(db_config)","<p>Инициализация объекта класса БД.\n<p>@param [Hash] db_config - конфигурация базы данных. @raise [Error] Не …\n"],["new","Edit_student_presenter","Edit_student_presenter.html#method-c-new","(view, parent_presenter)","<p>Инициализация презентера для управления данными студентов.\n<p>@param view [Modal_interface] Представление …\n"],["new","Student_list_presenter","Student_list_presenter.html#method-c-new","(view)","<p>Инициализация презентера списка студентов. Настраивает список студентов, фильтры и порядок сортировки. …\n"],["new_student","Edit_student_presenter","Edit_student_presenter.html#method-i-new_student","(student_data)","<p>Создание нового объекта студента из предоставленных данных.\n<p>@param student_data [Hash] Данные студента. …\n"],["operation","Add_student_presenter","Add_student_presenter.html#method-i-operation","(student_data)","<p>Операция добавления нового студента.\n<p>@param student_data [Hash] Данные студента.\n"],["operation","Edit_student_presenter","Edit_student_presenter.html#method-i-operation","(student_data)","<p>Основная операция редактирования студента.\n<p>@param student_data [Hash] Данные студента.\n"],["populate_fields","Add_student_presenter","Add_student_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса пустыми данными для нового студента.\n"],["populate_fields","Edit_contacts_presenter","Edit_contacts_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса текущими контактами студента.\n"],["populate_fields","Edit_git_presenter","Edit_git_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса текущими данными о Git студента.\n"],["populate_fields","Edit_student_presenter","Edit_student_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса данными студента.\n<p>@raise [NotImplementedError] Метод должен быть реализован …\n"],["populate_fields","Replace_student_presenter","Replace_student_presenter.html#method-i-populate_fields","()","<p>Заполнение полей интерфейса текущими основными данными студента.\n"],["query","DB_client","DB_client.html#method-i-query","(query, params=[])","<p>Выполнение SQL запроса.\n<p>@param [String] query - SQL запрос. @param [Array] params - массив параметров …\n"],["refresh_data","Student_list_presenter","Student_list_presenter.html#method-i-refresh_data","()","<p>Обновление данных в таблице студентов. Выполняет сброс фильтров, применяет новые фильтры и обновляет …\n"],["replace_student","Student_list_presenter","Student_list_presenter.html#method-i-replace_student","(student)","<p>Изменение студента.\n<p>@param student [Student] Объект студента для изменения.\n"],["reset_filters","Student_list_presenter","Student_list_presenter.html#method-i-reset_filters","()","<p>Сброс фильтров\n"],["select","Student_list_presenter","Student_list_presenter.html#method-i-select","(number)","<p>Выбор строки таблицы.\n<p>@param number [Integer] Индекс строки для выбора.\n"],["set_sort_order","Student_list_presenter","Student_list_presenter.html#method-i-set_sort_order","(column_index)","<p>Установка порядка сортировки и сортировка данных в таблице.\n<p>@param column_index [Integer] Индекс столбца, …\n"],["switch_page","Student_list_presenter","Student_list_presenter.html#method-i-switch_page","(direction)","<p>Изменение текущей страницы в таблице.\n<p>@param direction [Integer] Направление для изменения страницы.\n"],["valid_data?","Add_student_presenter","Add_student_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности данных студента при добавлении.\n<p>@param student_data [Hash] Данные студента. @return …\n"],["valid_data?","Edit_contacts_presenter","Edit_contacts_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности контактных данных студента.\n<p>@param student_data [Hash] Контактные данные студента. …\n"],["valid_data?","Edit_git_presenter","Edit_git_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности данных о Git.\n<p>@param student_data [Hash] Данные о Git. @return [Boolean] Возвращает …\n"],["valid_data?","Edit_student_presenter","Edit_student_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности данных студента.\n<p>@param student_data [Hash] Данные студента. @return [Boolean] Возвращает …\n"],["valid_data?","Replace_student_presenter","Replace_student_presenter.html#method-i-valid_data-3F","(student_data)","<p>Проверка валидности новых данных студента.\n<p>@param student_data [Hash] Новые данные студента. @return [Boolean] …\n"],["warn","App_logger","App_logger.html#method-i-warn","(message)","<p>Запись сообщения предупреждения в лог\n<p>@param [String] message - сообщение\n"]]}}